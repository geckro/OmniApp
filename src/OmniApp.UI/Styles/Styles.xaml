<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:gameMgrWindows="clr-namespace:GameManager.UI.Windows;assembly=GameManager.UI"
  xmlns:omniAppWindows="clr-namespace:OmniApp.UI.Windows"
  xmlns:financeWindows="clr-namespace:FinancialManager.UI.Windows;assembly=FinancialManager.UI"
  xmlns:helpers="clr-namespace:OmniApp.UI.Common.Helpers;assembly=OmniApp.UI.Common">
  <helpers:StyleHelper x:Key="Styles" />
  <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
  <Style x:Key="BaseWindowStyle">
    <Style.Resources>
      <Style TargetType="Control" x:Key="BaseControlStyle">
        <Setter Property="Margin" Value="4" />
        <Setter Property="Padding" Value="8" />
        <Style.Resources>
          <Style TargetType="Border">
            <Setter Property="CornerRadius" Value="8" />
          </Style>
        </Style.Resources>
      </Style>
      <Style TargetType="{x:Type Button}" BasedOn="{StaticResource BaseControlStyle}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="{Binding Source={StaticResource Styles}, Path=Instance.ButtonBackgroundColor}" />
        <Setter Property="Foreground" Value="{Binding Source={StaticResource Styles}, Path=Instance.ButtonFontColor}" />
        <Setter Property="FontFamily" Value="{Binding Source={StaticResource Styles}, Path=Instance.ButtonFontFamily}" />
        <Setter Property="FontSize" Value="{Binding Source={StaticResource Styles}, Path=Instance.ButtonFontSize}" />
        <Setter Property="FontWeight" Value="{Binding Source={StaticResource Styles}, Path=Instance.ButtonFontWeight}" />
        <Style.Triggers>
          <Trigger Property="IsMouseOver" Value="True">
            <Setter Property="Effect">
              <Setter.Value>
                <DropShadowEffect Color="DimGray" BlurRadius="8" ShadowDepth="1" Direction="270" />
              </Setter.Value>
            </Setter>
          </Trigger>
        </Style.Triggers>
      </Style>
      <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource BaseControlStyle}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="{Binding Source={StaticResource Styles}, Path=Instance.TextBoxBackgroundColor}" />
      </Style>
      <Style TargetType="{x:Type ContextMenu}" BasedOn="{StaticResource BaseControlStyle}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="10, 5, 10, 5" />
        <Setter Property="HasDropShadow" Value="True" />
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="ContextMenu">
              <Border CornerRadius="5" BorderBrush="{Binding Source={StaticResource Styles}, Path=Instance.ContextMenuBorderColor}" Background="{Binding Source={StaticResource Styles}, Path=Instance.ContextMenuBackgroundColor}"
                      BorderThickness="1" SnapsToDevicePixels="True">
                <ItemsPresenter />
              </Border>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource BaseControlStyle}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{Binding Source={StaticResource Styles}, Path=Instance.ContextMenuForegroundColor}" />
        <Setter Property="Padding" Value="10,5" />
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type MenuItem}">
              <Border x:Name="Border"
                      Background="{TemplateBinding Background}"
                      BorderBrush="{TemplateBinding BorderBrush}"
                      BorderThickness="{TemplateBinding BorderThickness}">
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Icon" />
                    <ColumnDefinition Width="*" />
                  </Grid.ColumnDefinitions>
                  <CheckBox x:Name="CheckBoxElement"
                            Grid.Column="0"
                            Margin="4"
                            VerticalAlignment="Center"
                            IsChecked="{Binding IsChecked, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                            Visibility="{Binding IsCheckable, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" />
                  <ContentPresenter x:Name="Icon"
                                    Grid.Column="0"
                                    Margin="4"
                                    MaxWidth="18"
                                    MinWidth="12"
                                    ContentSource="Icon" />
                  <ContentPresenter x:Name="HeaderHost"
                                    Grid.Column="1"
                                    Margin="4"
                                    ContentSource="Header"
                                    RecognizesAccessKey="True"
                                    VerticalAlignment="Center" />
                </Grid>
              </Border>
              <ControlTemplate.Triggers>
                <Trigger Property="IsHighlighted" Value="True">
                  <Setter Property="Background"
                          TargetName="Border"
                          Value="{Binding Source={StaticResource Styles}, Path=Instance.ContextMenuSelectedColor}" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                  <Setter Property="Foreground"
                          Value="{Binding Source={StaticResource Styles}, Path=Instance.ContextMenuDisabledColor}" />
                </Trigger>
                <Trigger Property="Icon" Value="{x:Null}">
                  <Setter Property="Visibility" TargetName="Icon" Value="Collapsed" />
                </Trigger>
                <Trigger Property="IsCheckable" Value="False">
                  <Setter Property="Visibility" TargetName="CheckBoxElement" Value="Collapsed" />
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      <Style TargetType="{x:Type ListBox}" BasedOn="{StaticResource BaseControlStyle}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="{Binding Source={StaticResource Styles}, Path=Instance.ListBackgroundColor}" />
      </Style>
      <Style TargetType="{x:Type ItemsControl}" BasedOn="{StaticResource BaseControlStyle}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="{Binding Source={StaticResource Styles}, Path=Instance.ListBackgroundColor}" />
      </Style>
      <Style TargetType="{x:Type Label}" BasedOn="{StaticResource BaseControlStyle}">
        <Setter Property="FontFamily" Value="{Binding Source={StaticResource Styles}, Path=Instance.HeaderFontFamily}" />
        <Setter Property="Foreground" Value="{Binding Source={StaticResource Styles}, Path=Instance.HeaderFontColor}" />
        <Setter Property="FontSize" Value="{Binding Source={StaticResource Styles}, Path=Instance.HeaderFontSize}" />
        <Setter Property="FontWeight" Value="{Binding Source={StaticResource Styles}, Path=Instance.HeaderFontWeight}" />
      </Style>
    </Style.Resources>
  </Style>
  <Style TargetType="{x:Type omniAppWindows:MainWindow}" BasedOn="{StaticResource BaseWindowStyle}">
    <Setter Property="Background" Value="{Binding Source={StaticResource Styles}, Path=Instance.BaseBackgroundColor}" />
  </Style>
  <Style TargetType="{x:Type financeWindows:FinanceManagerWindow}" BasedOn="{StaticResource BaseWindowStyle}">
    <Setter Property="Background" Value="{Binding Source={StaticResource Styles}, Path=Instance.BaseBackgroundColor}" />
  </Style>
  <Style TargetType="{x:Type gameMgrWindows:GameManagerWindow}" BasedOn="{StaticResource BaseWindowStyle}">
    <Setter Property="Background" Value="{Binding Source={StaticResource Styles}, Path=Instance.BaseBackgroundColor}" />
  </Style>
  <Style TargetType="{x:Type gameMgrWindows:AddGameWindow}" BasedOn="{StaticResource BaseWindowStyle}">
    <Setter Property="Background" Value="{Binding Source={StaticResource Styles}, Path=Instance.BaseBackgroundColor}" />
  </Style>
  <Style TargetType="{x:Type gameMgrWindows:ModifyMetadataWindow}" BasedOn="{StaticResource BaseWindowStyle}">
    <Setter Property="Background" Value="{Binding Source={StaticResource Styles}, Path=Instance.BaseBackgroundColor}" />
  </Style>
  <Style TargetType="{x:Type gameMgrWindows:EditGameDialog}" BasedOn="{StaticResource BaseWindowStyle}">
    <Setter Property="Background" Value="{Binding Source={StaticResource Styles}, Path=Instance.BaseBackgroundColor}" />
  </Style>
  <Style TargetType="{x:Type gameMgrWindows:EditTagsDialog}" BasedOn="{StaticResource BaseWindowStyle}">
    <Setter Property="Background" Value="{Binding Source={StaticResource Styles}, Path=Instance.BaseBackgroundColor}" />
  </Style>
  <Style TargetType="{x:Type gameMgrWindows:PreferencesWindow}" BasedOn="{StaticResource BaseWindowStyle}">
    <Setter Property="Background" Value="{Binding Source={StaticResource Styles}, Path=Instance.BaseBackgroundColor}" />
  </Style>
  <Style TargetType="{x:Type gameMgrWindows:AddNewTagGameDialog}" BasedOn="{StaticResource BaseWindowStyle}">
    <Setter Property="Background" Value="{Binding Source={StaticResource Styles}, Path=Instance.BaseBackgroundColor}" />
  </Style>
  <Style TargetType="{x:Type gameMgrWindows:GameDateSetterWindow}" BasedOn="{StaticResource BaseWindowStyle}">
    <Setter Property="Background" Value="{Binding Source={StaticResource Styles}, Path=Instance.BaseBackgroundColor}" />
  </Style>
  <Style TargetType="{x:Type gameMgrWindows:PickGameDialog}" BasedOn="{StaticResource BaseWindowStyle}">
    <Setter Property="Background" Value="{Binding Source={StaticResource Styles}, Path=Instance.BaseBackgroundColor}" />
  </Style>
</ResourceDictionary>
